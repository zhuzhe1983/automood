{
  "name": "gmify",
  "description": "A simple interface to GraphicsMagick for streaming image processing.",
  "version": "1.0.0",
  "author": {
    "name": "Domenic Denicola",
    "email": "domenic@domenicdenicola.com",
    "url": "http://domenicdenicola.com"
  },
  "license": "WTFPL",
  "repository": {
    "type": "git",
    "url": "git://github.com/domenic/gmify.git"
  },
  "bugs": {
    "url": "http://github.com/domenic/gmify/issues"
  },
  "main": "lib/gmify.js",
  "directories": {
    "lib": "lib"
  },
  "scripts": {
    "test": "mocha",
    "lint": "jshint lib"
  },
  "dependencies": {
    "gm": ">= 1.5.1"
  },
  "devDependencies": {
    "coffee-script": ">= 1.3.3",
    "chai": ">= 1.3.0",
    "jshint": ">= 0.9.1",
    "mocha": ">= 1.6.0"
  },
  "readme": "# Easy Streaming GraphicsMagick\n\n**gmify** provides a very simple interface to the [GraphicsMagick][] image processer. It's a thin layer around the\nwonderful [gm][] package, giving an API that satisfies the most common use case:\n\n```js\ngmify(\"source.svg\", \"dest.png\", function (file) {\n    file.flip()\n        .magnify()\n        .rotate(\"green\", 45)\n        .blur(7, 3)\n        .crop(300, 300, 150, 130)\n        .edge(3);\n}, function (err) {\n    if (err) {\n        // `err` is compiled from the raw stderr stream if appropriate.\n        // If it doesn't exist, then everything succeeded!\n    }\n});\n```\n\n(If you want just straight-up format conversion, you can omit the third argument.)\n\nFor more info on all the things you can do with a GraphicsMagick file, consult\n[the gm package's documentation][gm-docs].\n\nFinally, don't forget to actually install [GraphicsMagick][] on your system before using!\n\n[GraphicsMagick]: http://www.graphicsmagick.org/\n[gm]: https://github.com/aheckmann/gm/\n[gm-docs]: https://github.com/aheckmann/gm/#methods\n",
  "readmeFilename": "README.md",
  "_id": "gmify@1.0.0",
  "dist": {
    "shasum": "41f788765415e38a5ac23e5a71ac8bca8c0db3b0"
  },
  "_from": "gmify"
}
